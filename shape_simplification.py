import numpy as np
import matplotlib.pyplot as plt

def display_vector_field(xx, yy, vector_field):
    for k in range(n_points-1):
        plt.quiver(xx[k], yy[k], vector_field[k][0], vector_field[k][1], color='b', units='xy', scale=1)

    plt.grid()
    plt.show()

def normalise(x, x_min, x_max):
        return (x-x_min) / (x_max - x_min)

def compute_unit_vector(vector):
    """ Returns the unit vector of the vector. """
    return vector / np.linalg.norm(vector)

def compute_angle(v1, v2):
    """ Returns the angle in radians between vectors 'v1' and 'v2' """
    v1_u = compute_unit_vector(v1)
    v2_u = compute_unit_vector(v2)
    return np.arccos(np.clip(np.dot(v1_u, v2_u), -1.0, 1.0)) ## *180/np.pi

if __name__ == '__main__':
    xx = [-21833.920819989056, -21833.793775344828, -21833.793775344828, -21833.624382485857, -21833.624382485857, -21833.412641412142, -21833.412641412142, -21833.073855694198, -21833.073855694198, -21833.031507479453, -21833.031507479453, -21833.11620390894, -21833.11620390894, -21833.243248553168, -21833.285596767913, -21833.624382485857, -21833.624382485857, -21833.6667307006, -21833.70907891534, -21833.793775344828, -21833.793775344828, -21833.83612355957, -21833.878471774315, -21834.047864633285, -21834.09021284803, -21834.132561062772, -21834.174909277514, -21834.556043210203, -21834.68308785443, -21834.76778428392, -21834.81013249866, -21835.064221787117, -21835.064221787117, -21835.106570001863, -21835.106570001863, -21835.23361464609, -21835.23361464609, -21835.275962860833, -21835.275962860833, -21835.445355719807, -21835.445355719807, -21835.572400364035, -21835.572400364035, -21835.614748578777, -21835.572400364035, -21835.572400364035, -21835.53005214929, -21835.53005214929, -21835.48770393455, -21834.81013249866, -21834.81013249866, -21834.556043210203, -21834.556043210203, -21834.259605707, -21834.21725749226, -21834.174909277514, -21834.132561062772, -21834.09021284803, -21834.047864633285, -21834.005516418543, -21833.920819989056]
    yy = [41220.99949966608, 41220.87229785035, 41220.8298972451, 41220.66029482413, 41220.61789421888, 41220.405891192655, 41220.36349058741, 41220.02428574546, 41219.98188514021, 41219.93948453497, 41219.64268029825, 41219.55787908776, 41219.51547848252, 41219.38827666678, 41219.38827666678, 41219.049071824826, 41219.006671219584, 41218.964270614335, 41218.964270614335, 41218.879469403844, 41218.8370687986, 41218.79466819335, 41218.79466819335, 41218.62506577238, 41218.62506577238, 41218.58266516713, 41218.58266516713, 41218.20105971993, 41218.20105971993, 41218.28586093042, 41218.28586093042, 41218.54026456189, 41218.62506577238, 41218.66746637762, 41218.70986698287, 41218.8370687986, 41218.879469403844, 41218.92187000909, 41218.964270614335, 41219.133873035316, 41219.17627364056, 41219.30347545629, 41219.34587606154, 41219.38827666678, 41219.43067727203, 41219.47307787727, 41219.51547848252, 41219.55787908776, 41219.55787908776, 41220.23628877168, 41220.27868937692, 41220.533093008395, 41220.575493613636, 41220.87229785035, 41220.87229785035, 41220.91469845559, 41220.91469845559, 41220.95709906084, 41220.95709906084, 41220.99949966608, 41220.99949966608]

    min_x = np.min(xx)
    min_y = np.min(yy)
    max_x = np.max(xx)
    max_y = np.max(yy) #type:ignore

    xx = [normalise(x, min_x, max_x) for x in xx]
    yy = [normalise(y, min_y, max_y) for y in yy]

    assert len(xx) == len(yy)

    n_points = len(xx)

    vector_field = []

    for point_index in range(n_points-1):
        vector_field.append(
            np.array((xx[point_index+1]-xx[point_index], yy[point_index+1]-yy[point_index]))
        )

    angles_list = []

    for vector_index in range(len(vector_field)-1):
        angles_list.append(
            compute_angle(
                vector_field[vector_index],
                vector_field[vector_index+1]
                )
            )

    vector_field_normalised = [np.linalg.norm(vector) for vector in vector_field]

    print(vector_field_normalised)

    plt.plot(angles_list)
    plt.plot(vector_field_normalised)
    plt.show()




